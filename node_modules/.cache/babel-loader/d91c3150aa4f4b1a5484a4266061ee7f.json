{"ast":null,"code":"var _jsxFileName = \"/Users/diegoburgos/Desktop/Dev/Die/my-front/src/components/Bases.js\";\nimport React from 'react';\n\nclass Bases extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bases: [],\n      isFetch: true\n    };\n  }\n\n  render() {\n    const {\n      isFetch,\n      memes\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Search, {\n      handleSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), isFetch && 'Loading...', !isFetch && !memes.length && 'No memes founded u.u try another search', /*#__PURE__*/React.createElement(\"section\", {\n      className: \"memes-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, memes.map(meme => /*#__PURE__*/React.createElement(Meme, {\n      imageUrl: meme.imageUrl,\n      name: meme.displayName,\n      key: meme.generatorID,\n      ranking: meme.ranking,\n      totalVotesScore: meme.totalVotesScore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }\n    }))));\n  }\n\n}\n\nexport default Bases;","map":{"version":3,"sources":["/Users/diegoburgos/Desktop/Dev/Die/my-front/src/components/Bases.js"],"names":["React","Bases","Component","constructor","props","state","bases","isFetch","render","memes","handleSearch","length","map","meme","imageUrl","displayName","generatorID","ranking","totalVotesScore"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAI;AACR,UAAM;AAAED,MAAAA,OAAF;AAAWE,MAAAA;AAAX,QAAqB,KAAKJ,KAAhC;AAEA,wBACE,uDACE,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKK,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIIH,OAAO,IAAI,YAJf,EAQK,CAACA,OAAD,IAAY,CAACE,KAAK,CAACE,MAApB,IAA+B,yCARnC,eAWE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,KAAK,CAACG,GAAN,CAAWC,IAAD,iBAAU,oBAAC,IAAD;AAClB,MAAA,QAAQ,EAAEA,IAAI,CAACC,QADG;AAElB,MAAA,IAAI,EAAED,IAAI,CAACE,WAFO;AAGlB,MAAA,GAAG,EAAEF,IAAI,CAACG,WAHQ;AAIlB,MAAA,OAAO,EAAEH,IAAI,CAACI,OAJI;AAKlB,MAAA,eAAe,EAAEJ,IAAI,CAACK,eALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,CAFJ,CAXF,CADF;AAyBD;;AAtCiC;;AAyCpC,eAAejB,KAAf","sourcesContent":["import React from 'react'\n\n\n\nclass Bases extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      bases: [],\n      isFetch: true,\n    }\n  }\n\n  render () {\n    const { isFetch, memes } = this.state\n\n    return (\n      <>\n        <Search handleSearch={this.handleSearch} />\n\n        {\n          isFetch && 'Loading...'\n        }\n\n        {\n          (!isFetch && !memes.length) && 'No memes founded u.u try another search'\n        }\n\n        <section className=\"memes-container\">\n          {\n            memes.map((meme) => <Meme\n              imageUrl={meme.imageUrl}\n              name={meme.displayName}\n              key={meme.generatorID}\n              ranking={meme.ranking}\n              totalVotesScore={meme.totalVotesScore}\n            />)\n          }\n        </section>\n      </>\n    )\n  }\n}\n\nexport default Bases\n"]},"metadata":{},"sourceType":"module"}